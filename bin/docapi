#!/usr/bin/env ruby

unless RUBY_PLATFORM =~ /(:?mswin|mingw)/
  require 'pathname'
  lib_dir = Pathname.new(__FILE__).realpath.dirname + '../lib'
else
  # windows
  lib_dir = File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib'))
end

$:.unshift(lib_dir) unless $:.include?(lib_dir)

require 'optparse'
require 'docapi'

@options = {}
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: docapi [generate|merge] [input]"
  
  opts.on("-o", "--output=", "Output directory") do |o|
    @options[:output] = o
  end
  opts.on("-t", "--title=", "Documentation title") do |o|
    @options[:title] = o
  end
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
  
end

option_parser.parse!

@command =  ARGV.shift

case @command
when 'generate'
  Docapi::CLI.new.generate(input = ARGV, output = @options.delete(:output), @options)
when 'merge'
  Docapi::CLI.new.merge(input = ARGV.shift, output = @options.delete(:output), @options)
else
  $stderr.puts option_parser.help  
  exit(-1)
end